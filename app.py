import time
from bs4 import BeautifulSoup
from datetime import datetime

loops = 3

# ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô
my_car = {'4W': 2, '4WJ': 0, '6W5.5': 1, '6w7.2': 0}
# ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô
route_direction = ['SO5-SKU', 'SO5-TLG-HKT', '5BKT-EA2']


assigned_cars = {key: 0 for key in my_car}
assigned_routes = {key: [] for key in my_car}

def process_rows(rows):
    for row in rows:
        cells = row.find_all('td')

        if len(cells) >= 4:
            car_type = cells[3].get_text(strip=True)
            route = cells[1].get_text(strip=True)

            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏£‡∏ñ‡∏°‡∏µ‡πÉ‡∏ô my_car ‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô route_direction
            if car_type in my_car and route in route_direction:
                car_count = my_car[car_type]

                # ‡∏ñ‡πâ‡∏≤‡∏£‡∏ñ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0 ‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô
                if car_count > 0:
                    # ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô...
                    # ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô...

                    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô
                    assigned_cars[car_type] += 1

                    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô
                    assigned_routes[car_type].append(route)

                    # ‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô my_car
                    my_car[car_type] -= 1


        else:
            print("‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠")
            return True  # ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
    return False

def all_cars_assigned():
    return all(count == 0 for count in my_car.values())

# ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå tbr.html
with open('index.html', 'r', encoding='utf-8') as file:
    html_content = file.read()

# ‡πÉ‡∏ä‡πâ BeautifulSoup ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏¢‡∏Å‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå HTML
soup = BeautifulSoup(html_content, 'html.parser')

# ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏£‡∏Å
table = soup.find('table', class_='el-table__body')

# ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô <tbody> ‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏£‡∏Å
if table:
    tbody = table.find('tbody')
    if tbody:
        rows = tbody.find_all('tr')

        for _ in range(loops):
            try:
                stop_program = process_rows(rows)
                
            except Exception as e:
                print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
                break

            if not stop_program:
                # ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ß‡∏ô‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡πÅ‡∏ñ‡∏ß
                current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                print(f"\nüìÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•: {current_time}")
                
                print("üöó ‡∏£‡∏ñ‡∏ß‡πà‡∏≤‡∏á:")
                for car_type, count in my_car.items():
                    if count > 0:
                        print(f"   - {car_type} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {count} ‡∏Ñ‡∏±‡∏ô")
                
                print("‚úÖ ‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô:")
                for car_type, routes in assigned_routes.items():
                    if routes:
                        print(f"   - {car_type} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {len(routes)} ‡∏Ñ‡∏±‡∏ô üõ£Ô∏è ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á: {', '.join(routes)}")
                
                print("-----------------------------------------------")

                if stop_program or all_cars_assigned():
                    break

                # ‡∏£‡∏≠ 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                time.sleep(1)
        
    else:
        print("‡πÑ‡∏°‡πà‡∏û‡∏ö <tbody> ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á")
else:
    print("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏ô HTML")