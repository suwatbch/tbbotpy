import time
from datetime import datetime
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import WebDriverException
from selenium.webdriver.chrome.options import Options

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Chrome options
chrome_options = Options()
chrome_options.add_argument("--headless")  # ‡∏£‡∏±‡∏ô‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î headless
chrome_options.add_argument("user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36")  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô user-agent

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô driver ‡∏û‡∏£‡πâ‡∏≠‡∏° options
driver = webdriver.Chrome(options=chrome_options)

try:
    driver.get('https://th.turboroute.ai/#/login')

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö‡∏û‡∏§‡∏ï‡∏¥‡∏Å‡∏£‡∏£‡∏°‡∏°‡∏ô‡∏∏‡∏©‡∏¢‡πå
    time.sleep(2)

    # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á username ‡πÅ‡∏•‡∏∞ password
    username_field = driver.find_element(By.NAME, 'account')
    password_field = driver.find_element(By.NAME, 'password')

    username_field.send_keys('0955294478')
    password_field.send_keys('FleetSPT@2468')

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    time.sleep(1)

    # ‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
    username_field.send_keys(Keys.RETURN)

    # ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà‡πÇ‡∏´‡∏•‡∏î
    WebDriverWait(driver, 10).until(EC.url_contains('/home'))

    driver.get('https://th.turboroute.ai/#/grab-single/single-hall')

    my_car = {'4W': 2, '4WJ': 0, '6W5.5': 1, '6w7.2': 0} # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô
    route_direction = ['SO5-SKU', 'SO5-TLG-HKT', '5BKT-EA2'] # ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô

    assigned_cars = {key: 0 for key in my_car}
    assigned_routes = {key: [] for key in my_car}

    def get_table_data():
        # ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡πÅ‡∏ñ‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÅ‡∏ñ‡∏ß
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, 'table.el-table__body tbody tr'))
        )
        # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏û‡∏ö
        table = driver.find_element(By.CSS_SELECTOR, 'table.el-table__body')
        
        tbody = table.find_element(By.TAG_NAME, 'tbody')
        rows = tbody.find_elements(By.TAG_NAME, 'tr')
        for row in rows:
            cells = row.find_elements(By.TAG_NAME, 'td')

            if len(cells) >= 4:
                car_type = cells[3].text
                route = cells[1].text

                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏£‡∏ñ‡∏°‡∏µ‡πÉ‡∏ô my_car ‡πÅ‡∏•‡∏∞‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô route_direction
                if car_type in my_car and route in route_direction:
                    car_count = my_car[car_type]

                    # ‡∏ñ‡πâ‡∏≤‡∏£‡∏ñ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0 ‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô
                    if car_count > 0:
                        # ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° "grab an order"
                        try:
                            row_button = row.find_element(By.XPATH, ".//span[contains(text(), 'grab an order')]")
                            row_button.click()
                            print(f"‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° 'grab an order' ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {car_type} ‡πÉ‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á {route}")

                        except WebDriverException as e:
                            print(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° 'grab an order' ‡πÑ‡∏î‡πâ: {e}")

                        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô
                        assigned_cars[car_type] += 1

                        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô
                        assigned_routes[car_type].append(route)

                        # ‡∏•‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏ô my_car
                        my_car[car_type] -= 1

                        return True

        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏£‡∏≤‡∏¢‡∏£‡∏≠‡∏ö
        current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        print(f"\nüìÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏£‡∏≤‡∏¢‡∏£‡∏≠‡∏ö: {current_time}")
        print("üöó ‡∏£‡∏ñ‡∏ß‡πà‡∏≤‡∏á:")
        for car_type, count in my_car.items():
            if count > 0:
                print(f"   - {car_type} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {count} ‡∏Ñ‡∏±‡∏ô")

        print("‚úÖ ‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô:")
        for car_type, routes in assigned_routes.items():
            if routes:
                print(f"   - {car_type} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {len(routes)} ‡∏Ñ‡∏±‡∏ô üõ£Ô∏è ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á: {', '.join(routes)}")
        print("-----------------------------------------------")
    
        return all(count == 0 for count in my_car.values())

    while True:
        if get_table_data():
            summary = "\nüìÖ ‡∏ú‡∏•‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢:\n"
            summary += "‚úÖ ‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô:\n"
            for car_type, routes in assigned_routes.items():
                if routes:
                    summary += f"   - {car_type} ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {len(routes)} ‡∏Ñ‡∏±‡∏ô üõ£Ô∏è ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á: {', '.join(routes)}\n"
            
            print(summary)
            # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÉ‡∏ô alert
            # driver.execute_script(f"alert(`{summary}`);")
            break

        driver.refresh()
        time.sleep(1)

except (KeyboardInterrupt, WebDriverException) as e:
    print("‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")

finally:
    input("‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå...")
    driver.quit()